@page "/productDescription"
@using System.Text
@using System.Net.Mime
@using global::MudBlazor
@inject Common.ICommonResponseGet response

<PageTitle>Product Description</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Product Description</MudText>
<MudText Typo="Typo.body1" GutterBottom="true">Modify the product descriptions.</MudText>

<MudDataGrid  T="ProductDescriptionModel" ServerData="ServerReload" EditMode="DataGridEditMode.Form" ReadOnly="false"
SortMode="@SortMode.Multiple" 
ShowFilterIcons="true" 
Filterable="true"
ColumnResizeMode="ResizeMode.Container"

>

    <ToolBarContent>
        <MudText Typo="Typo.h6">Product Description</MudText>
        <MudSpacer />

    </ToolBarContent> 
    <Columns >

		<PropertyColumn xs="0" Property="x => x.ProductDescriptionId" Hidden="true" Editable="false" Filterable="false"  />
        <PropertyColumn xs="2" Property="x => x.ModifiedDate" Format="d" Title="Modified" Sortable="true" Editable="false" Filterable="true" Resizable="false" Class="pa-4" />
        <PropertyColumn xs="9" Property="x => x.Description" Sortable="true" Editable="true" Filterable="true" Required="true" Resizable="true" />
            
    </Columns>
    <PagerContent >
        <MudDataGridPager T="ProductDescriptionModel"  PageSizeOptions=[5,10,25,50,100,250] Class="pa-4" />
    </PagerContent>
</MudDataGrid> 


@code {


    private MudDataGrid<ProductDescriptionModel>? dataGrid ;


    private async Task<GridData<ProductDescriptionModel>> ServerReload(GridState<ProductDescriptionModel> state)
    {
        return await response.FindAllAsync<ProductDescriptionModel>(state, "Description", httpClient);        
    }

    private Task OnClear()
    {
        return dataGrid!.ReloadServerData();
    }

    private Task OnSearch(string text)
    {
        
        return dataGrid!.ReloadServerData();
    }
   
}
